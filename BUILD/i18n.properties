modules: archives,\
as,\
birt,\
common,\
drools,\
esb,\
examples,\
flow,\
freemarker,\
hibernatetools,\
jbpm,\
jmx,\
jsf,\
jst,\
labs,\
portlet,\
seam,\
smooks,\
struts,\
tptp,\
vpe,\
ws

#tests

# \1 = component, eg hibernatetools
# \2 = plugin ID, eg org.hibernate.eclipse.console
# \3 = resource name, eg plugin.properties, org/hibernate/eclipse/console/HibernateConsoleMessages
prop2po_regex_from=^([a-zA-Z]+)/(plugins|features)/([^/]+)/(.*?)_([a-zA-Z_]+)[.]properties$$
prop2po_regex_to=\\1~\\2-\\3-\\4~\\5.po
# NB the filtermapper will convert / to . and ~ to /.
# So end result will be, eg hibernatetools/
# plugins-org.hibernate.eclipse.console-
# org.hibernate.eclipse.console.HibernateConsoleMessages/
# locale_id.po

prop2po.locales: ja


# This is the list of locales which will be converted between properties and PO files
# Please separate locale IDs with commas (",") and no spaces.
#
locales: ja,zh_CN,pt_BR,es_ES,fr_FR,de_DE
pseudo.locales: en,en_AA,qps

# \1 = component, eg hibernatetools
# \2 = plugin ID, eg org.hibernate.eclipse.console
# \3 = resource name, eg plugin.properties, org/hibernate/eclipse/console/HibernateConsoleMessages
#prop2pot_regex_from=^([^/]+)/plugins/([^/]+)/(?:src/main/resources/|src/main/|[^/]+/|)(.*)[.]properties$$
#regex_to=\\1~\\2-\\3~\\3
#prop2pot_regex_to=${regex_to}.pot


prop2pot.regex=^([a-zA-Z]+)/(plugins|features)/([^/]+)/(?:src/main/resources/|src/main/|[^/]+/|)(.*)[.]properties$$
prop2pot.replace=\\1~\\2-\\3-\\4~\\4.pot


# NB the filtermapper will convert / to . and ~ to /.
# So end result will be, eg hibernatetools/
# org.hibernate.eclipse.console-
# org.hibernate.eclipse.console.HibernateConsoleMessages/
# org.hibernate.eclipse.console.HibernateConsoleMessages.pot

verifyprop.replace=\\1/\\2/\\3.properties

# TODO mark empty strings NON-TRANSLATABLE, then change this to "fail"
prop2pot_whenEmptyString=warnAndSkip


po2pot.regex: ^(.*/[^-]+-[^-]+-([^/]+))/[^/]+[.]po$$
po2pot.replace: \\1/\\2.pot

fuzzy.arg: --set-fuzzy
fuzzy.src: .
fuzzy.dest: .

work.dir: ${basedir}/WORK
